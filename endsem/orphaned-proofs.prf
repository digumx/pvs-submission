("hoare_vcgen" hoare_vcgen precond_lem 0 (precond_lem-1 nil 3798303429 ("" (auto-rewrite-defs) (("" (grind) (("" (expand "precond" 1) (("" (apply-extensionality) nil nil)) nil)) nil)) nil) ((pre def-decl "assertion" hoare_vcgen nil) (slow_div const-decl "annotatedProgram" hoare_vcgen nil) (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers nil) (mult_divides1 application-judgement "(divides(n))" divides nil) (mult_divides2 application-judgement "(divides(m))" divides nil) (state type-eq-decl nil Hoare_logic nil) (TRUE const-decl "bool" booleans nil) (O const-decl "T3" function_props nil) (= const-decl "[T, T -> boolean]" equalities nil) (numfield nonempty-type-eq-decl nil number_fields nil) (+ const-decl "[numfield, numfield -> numfield]" number_fields nil) (* const-decl "[numfield, numfield -> numfield]" number_fields nil) (int_plus_int_is_int application-judgement "int" integers nil) (number nonempty-type-decl nil numbers nil) (boolean nonempty-type-decl nil booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (< const-decl "bool" reals nil) (below type-eq-decl nil naturalnumbers nil) (value type-eq-decl nil Hoare_logic nil) (precond const-decl "assertion" hoare_vcgen nil)) shostak))